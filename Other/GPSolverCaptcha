// ==UserScript==
// @name        GP Captcha Solver
// @namespace   bFcSn Script
// @version     14.1
// @description Solver for Captcha metode GP
// @author      bFcsnblogger
// @match       *://*/*
// @license     MIT
// ==/UserScript==

(function () {
    'use strict';

    if(document.querySelector('#gpcaptcha')){

        const captchaImgs = document.querySelectorAll('#gpcaptcha .svg-padding');
        const hashes = [
            {"Key": "M512 176.001C512 273.203"},
            {"Flag": "M349.565 98.783C295.978"},
            {"Heart": "M414.9 24C361.8 24 312"},
            },
            {"Tree" : "M377.33 375.429L293.906"},
            {"Star" : "M259.3 17.8L194 150.2 47.9"},
            {"Truck":"M624 352h-16V243.9c0-12.7-5"}
        ]

        const selectedText = document.querySelector('#gpcaptcha p .text-capitalize').innerText.toLowerCase();
        const checkHash = hashes.find.keys(hash)[0].toLowerCase() === selectedText);
        const flagValue = bject.values(checkHash)[0] : null;
        console.log(selectedText, flagValue)

        function checkImages() tor('svg path').getAttribute('d');
                if (svg.startsWith(flagValue)) {
                    img.click()
                    console.log('Matched');
                }else{
                    console.log('Doesnt match');
                }
            });
        }

        setInterval(function(){

